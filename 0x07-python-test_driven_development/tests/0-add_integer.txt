kThe  ``0-add_integer`` module
=============================

Using add_integer
-----------------

>>> add_integer = __import__('0-add_integer').add_integer

SUCCESS
>>> print(add_integer(2,4))
6
>>> print(add_integer(2))
100
>>> print(add_integer(-1.2, -2.3))
-3
>>> print(add_integer(2.3,1))
3
>>> print(add_integer(2, -1))
1

FAIL
>>> print(add_integer("2", 2))
Traceback (most recent call last):
TypeError: a must be an integer

>>> print(add_integer(2, "10"))
Traceback (most recent call last):
TypeError: b must be an integer

>>> print(add_integer(None))
Traceback (most recent call last):
TypeError: a must be an integer

>>> print(add_integer("1233"))
Traceback (most recent call last):
TypeError: a must be an integer

>>> print(add_integer(1,2,3))
Traceback (most recent call last):
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> print(add_integer(float("inf")))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> print(add_integer(float("NaN")))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> print(add_integer(1, [1, 2]))
Traceback (most recent call last):
TypeError: b must be an integer
